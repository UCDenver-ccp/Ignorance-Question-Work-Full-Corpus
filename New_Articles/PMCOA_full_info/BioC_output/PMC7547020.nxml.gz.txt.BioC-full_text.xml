<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE collection SYSTEM "BioC.dtd">
<collection><source>PMC</source><date>20210131</date><key>pmc.key</key><document><id>7547020</id><infon key="license">CC BY</infon><passage><infon key="article-id_doi">10.1038/s41598-020-73278-8</infon><infon key="article-id_pmc">7547020</infon><infon key="article-id_pmid">33037266</infon><infon key="article-id_publisher-id">73278</infon><infon key="elocation-id">16885</infon><infon key="kwd">Paediatric cancer Machine learning Cancer imaging</infon><infon key="license">Open AccessThis article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit http://creativecommons.org/licenses/by/4.0/.</infon><infon key="name_0">surname:Prince;given-names:Eric W.</infon><infon key="name_1">surname:Whelan;given-names:Ros</infon><infon key="name_10">surname:Johnston;given-names:James M.</infon><infon key="name_11">surname:Jackson;given-names:Eric M.</infon><infon key="name_12">surname:Limbrick;given-names:David D.;suffix:Jr.</infon><infon key="name_13">surname:Smith;given-names:Amy</infon><infon key="name_14">surname:Drapeau;given-names:Annie</infon><infon key="name_15">surname:Chern;given-names:Joshua J.</infon><infon key="name_16">surname:Kilburn;given-names:Lindsay</infon><infon key="name_17">surname:Ginn;given-names:Kevin</infon><infon key="name_18">surname:Naftel;given-names:Robert</infon><infon key="name_19">surname:Dudley;given-names:Roy</infon><infon key="name_2">surname:Mirsky;given-names:David M.</infon><infon key="name_20">surname:Tyler-Kabara;given-names:Elizabeth</infon><infon key="name_21">surname:Jallo;given-names:George</infon><infon key="name_22">surname:Handler;given-names:Michael H.</infon><infon key="name_23">surname:Jones;given-names:Kenneth</infon><infon key="name_24">surname:Donson;given-names:Andrew M.</infon><infon key="name_25">surname:Foreman;given-names:Nicholas K.</infon><infon key="name_26">surname:Hankinson;given-names:Todd C.</infon><infon key="name_3">surname:Stence;given-names:Nicholas</infon><infon key="name_4">surname:Staulcup;given-names:Susan</infon><infon key="name_5">surname:Klimo;given-names:Paul</infon><infon key="name_6">surname:Anderson;given-names:Richard C. E.</infon><infon key="name_7">surname:Niazi;given-names:Toba N.</infon><infon key="name_8">surname:Grant;given-names:Gerald</infon><infon key="name_9">surname:Souweidane;given-names:Mark</infon><infon key="section_type">TITLE</infon><infon key="title">Subject terms</infon><infon key="type">front</infon><infon key="volume">10</infon><infon key="year">2020</infon><offset>0</offset><text>Robust deep learning classification of adamantinomatous craniopharyngioma from limited preoperative radiographic images</text></passage><passage><infon key="section_type">ABSTRACT</infon><infon key="type">abstract</infon><offset>120</offset><text>Deep learning (DL) is a widely applied mathematical modeling technique. Classically, DL models utilize large volumes of training data, which are not available in many healthcare contexts. For patients with brain tumors, non-invasive diagnosis would represent a substantial clinical advance, potentially sparing patients from the risks associated with surgical intervention on the brain. Such an approach will depend upon highly accurate models built using the limited datasets that are available. Herein, we present a novel genetic algorithm (GA) that identifies optimal architecture parameters using feature embeddings from state-of-the-art image classification networks to identify the pediatric brain tumor, adamantinomatous craniopharyngioma (ACP). We optimized classification models for preoperative Computed Tomography (CT), Magnetic Resonance Imaging (MRI), and combined CT and MRI datasets with demonstrated test accuracies of 85.3%, 83.3%, and 87.8%, respectively. Notably, our GA improved baseline model performance by up to 38%. This work advances DL and its applications within healthcare by identifying optimized networks in small-scale data contexts. The proposed system is easily implementable and scalable for non-invasive computer-aided diagnosis, even for uncommon diseases.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">title_1</infon><offset>1413</offset><text>Introduction</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>1426</offset><text>Deep learning is a subtype of artificial intelligence that constructs generalizable models for data representations via a multilayer abstraction process. A common deep learning architecture used for classification of visual information is known as a Convolutional Neural Network (CNN). CNNs are constructed using multiple sequential layers containing variants of the multi-layer perceptron. These networks have demonstrated generalization capacity for identifying both linear and non-linear latent patterns that lead to differentiable information. CNNs and other variants have had great success in tasks such as image object recognition; speech recognition, translation, and generation; and medical diagnostics, genetics, and drug discovery. These applications have achieved remarkable success, to some extent by leveraging very large amounts of labeled training data. An example is the ImageNet Large Scale Visual Recognition Challenge (ILVSRC). This leading image recognition competition challenges competitors to advance the state of the art in computer-guided object detection and classification. Using the ImageNet dataset, comprising over 1.4 million images across more than 1000 possible categories, CNNs are achieving error rates under 5%. </text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>2675</offset><text>Within the healthcare space, reliable CNN inference models have been described under conditions when vast amounts of training data are available. Examples include dermatological diseases and diabetic retinopathy. However, when such models are trained on more limited datasets, the results are often unreliable, as the models overfit the training data. More specifically, in a small-data context, the latent features that a network models are likely to result from sampling noise that exists only in the training data, and not in novel test data. Without techniques to overcome this generalization problem, CNNs may have limited applications for less common diseases, including brain tumors.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>3366</offset><text>One technique available to overcome the overfitting complication of small training datasets is Transfer Learning (TL). This is a machine learning methodology for storing knowledge gained from solving a problem within one domain and applying that knowledge to another domain. The success of TL has led to the development of publicly available pre-trained models derived from top ILSVRC solutions. By using these pre-trained networks to generate feature embeddings for our dataset of interest, we enable our classifier to have access to the pattern recognition capabilities of these state-of-the-art architectures.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>3979</offset><text>Another technique commonly applied to image classification problems is data augmentation. This process synthetically expands a dataset by applying transformations (i.e. crop, rotate, blur, etc.) to real data in an attempt to preserve domain-specific features. We employed two separate data augmentation approaches. The first was a stochastic process that sampled across transformations with probability thresholds. The second method, known as TANDA (Transformation Adversarial Networks for Data Augmentation), is a ML-based approach that uses Generative Adversarial Networks (GANs) and Recurrent Neural Network (RNNs) to learn the optimal combination and parameters of the image transformations within a specific dataset. TANDA was reported to yield synthetic data in which feature representations are distributed and invariant, thus helping disentangle the factors of variation between the two classes.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>4883</offset><text>An additional challenge in identifying the optimal model is the optimization of CNN hyperparameters. This remains a complicated and computationally intensive task. To mitigate the computational time required, one may apply a meta-heuristic parameter optimization in the form of an asynchronously parallelized genetic algorithm. This optimization procedure allows the model to optimize more intelligently over the solution space with fewer required iterations.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>5343</offset><text>To demonstrate the capacity of combining deep networks, transfer learning, data augmentation, and genetic algorithms to overcome the problem of overfitting with small datasets, we utilized the pediatric brain tumor Adamantinomatous Craniopharyngioma (ACP).</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>5600</offset><text>ACP is a neurologically devastating brain tumor that is notorious for causing vision loss, hypothalamic injury, hormone dysfunction and cerebrospinal fluid pathway obstruction, among other injuries. This damage results from growth of the tumor in the sellar/suprasellar region of the brain, where it invariably develops. Here, ACP compresses the optic apparatus, hypothalamic-pituitary axis, and cerebral ventricular system. While ACP is a histologically benign lesion, it often recurs locally, which makes further treatment more perilous for the patient. As such, ACP has been associated with the lowest quality of life scores of any pediatric brain tumor. Current therapeutic management of ACP is limited to either aggressive surgical resection or surgical debulking followed by external beam radiation. This differs considerably from the therapy for other tumors that present in the sellar/suprasellar region. For example, Germinoma, one of the most common tumors in the radiographic differential diagnosis of ACP, is effectively treated without surgical intervention. Other masses of this region, including glioma, pituitary adenoma, arachnoid cysts, and others, similarly require therapy tailored to the particular entity. As such, a priori knowledge of the patients diagnosis would considerably improve the clinical care of children with tumors of the sellar/suprasellar region, the most common of which is ACP.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>7018</offset><text>Radiographically, ACP is characterized by heterogeneous solid tissue, cystic regions, and calcification. Recent data indicate that ACP and other tumors of the sellar/suprasellar region may be accurately diagnosed using current radiographic techniques in 64â87% of cases. This sets a high bar for machine-aided diagnoses, but also leaves room for clinically relevant improvement.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>7399</offset><text>While ACP is the most common sellar/suprasellar pediatric tumor, it is an uncommon entity, representing 2 to 5% of all pediatric brain tumors, with an incidence of approximately 1.9 per million patient-years. In order to facilitate research into this tumor, Advancing Treatment for Pediatric Craniopharyngioma was formed in 2015. This consortium includes 17 North American centers, which share tissue and clinical data regarding children with ACP, thus providing source data for this research. In addition to the imaging data assembled from these centers, we added data from St. Jude Childrenâs Research Hospital, thereby assembling a generalizable and representative dataset of both ACP and other sellar/suprasellar entities for model training and evaluation.</text></passage><passage><infon key="section_type">INTRO</infon><infon key="type">paragraph</infon><offset>8162</offset><text>In summary, ACP is an ideal candidate for CNN inference due to its consistent anatomical location, radiographically recognizable features, and, most importantly, the substantial clinical management differences between ACP and the other brain masses that lie within the differential diagnosis. However, given its incidence, ACP lacks the volume of labeled data observed in more common disease contexts. By describing a mathematical model for the identification of ACP, we present a computationally economical method to optimize CNN architectures for image classification in contexts that do not afford large amounts of labeled training data. In so doing, we create a non-invasive diagnostic tool to aid in the reduction of mis-diagnoses and unnecessary medical intervention.</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">title_1</infon><offset>8936</offset><text>Results</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">title_2</infon><offset>8944</offset><text>Baseline predictive results</text></passage><passage><infon key="file">41598_2020_73278_Fig1_HTML.jpg</infon><infon key="id">Fig1</infon><infon key="section_type">FIG</infon><infon key="type">fig_caption</infon><offset>8972</offset><text>Transfer learning networks, feature embeddings, and baseline results. (A) ILSVRC network models utilized, with their top 1% and top 5% accuracy in ILSVRC competition noted. (B) Example CT and MRI images for both ACP and NOTACP. (C) ROC (left) and AUC (right) values for all twelve networks and both imaging modalities (CT top, MRI bottom). The diagonal dashed line represents performance of a random guess.</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">paragraph</infon><offset>9379</offset><text>Using twelve state-of-the-art networks that have publicly available deep learning models from the TensorFlow Hub library trained on the ImageNet ILSVRC dataset (Fig.Â 1A), we generated feature embedding vectors to be used in model training (Fig.Â 1B). Baseline experiments were conducted by training a single fully-connected layer with a softmax activation function and stochastic gradient descent (SGD) optimization algorithm. Using whole-batch training, a learning rate of 0.01, and a training duration of 100 epochs, we established baseline results (Fig.Â 1C). Across all twelve feature embeddings, on average the classifier accurately labelled individual CT scans 62.3% (Top-5 Network Average ; maximum performance ) and MRI scans 45.7% (; ) of the time.</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">title_2</infon><offset>10138</offset><text>Model selection and parameter optimization using manual selection</text></passage><passage><infon key="file">41598_2020_73278_Fig2_HTML.jpg</infon><infon key="id">Fig2</infon><infon key="section_type">FIG</infon><infon key="type">fig_caption</infon><offset>10204</offset><text>Genetic algorithm optimization of model parameters. (A) General process schematic for genetic algorithm parameter optimization. Moving from left to right, a feature variant is selected for each model feature to create individual networks (Step 1; individuals are highlighted in unique colors). Individuals are trained and evaluated to determine fitness and ranked accordingly (Step 2). Two networks are chosen from the fittest population and a new network is derived by selecting from feature variants in these two networks, and variants are occasionally mutated (i.e., randomly selected from the population pool; Step 3). (B) Model feature and respective feature variants explored in first phase of genetic algorithm optimization. Each column represents a model feature to be optimized and each row is a possible feature variant for the GA to select from. This table reflects the âPopulation Poolâ (A). (C) Top-5 performing networks for independent CT and MRI networks after 10 generations of 100 solution populations; ranked according to test accuracy. (D) Top-5 performing networks for combined CT-MRI networks after 10 generations of 100 solution populations; ranked according to test accuracy.</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">paragraph</infon><offset>11407</offset><text>To address the computational and time demands associated with architecture selection and hyperparameter optimization within deep learning models, we employed a parallelized simple genetic algorithm (GA) to more rapidly identify optimal combinations of feature extractors, learning parameters, and hyperparameters for both CT and MRI (see Computational Methods; Fig.Â 2A).</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">paragraph</infon><offset>11779</offset><text>We employed ten different model features to optimize the parameters of the (1) fully connected classifier network; (2) the pre-trained deep CNN to be utilized for feature embeddings; and, (3) the type of training and test datasets (e.g. original or synthetically expanded by augmentation; Fig.Â 2B). The number of variants for each model feature ranged from three to fifteen, making the total number of possible network combinations 19,051,200 (see &quot;Methods&quot; section). The GA allowed for more intelligent exploration of the solution space and reduced the overall computational time required. By performing 10 generations of 100 solution populations with a generational retention rate of 40%, a negative rejection probability of 10%, and a mutation frequency of 20%, we explored only  solutions to identify the top 5 performing networks of the final generation (Fig.Â 2C). This process yielded an accuracy increase in CT of only 3.75% (; ) and an an increase of 16.8% (; ) for MRI.</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">title_2</infon><offset>12760</offset><text>Model selection and parameter optimization using a simple genetic algorithm</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">paragraph</infon><offset>12836</offset><text>When the genetic algorithm was employed, a superior network became apparent for both CT- and MRI-trained classifiers. Interestingly, the same general architectureâResNetâwas selected, with CT data favoring the V1 variant and MRI favoring the V2 variant. The primary difference between these architectures is the use of batch normalization (BN) between every layer in V2 as opposed to V1. The BN transformation is particularly resilient toward parameter scale because backpropagation through a layer is unaffected by the scale of its parameters. This suggests that MRI data contained more erratic feature distributions than CT and therefore benefited from the more regularized representation. Further, the superiority of each respective network is highlighted by their selection within the combined CT-MRI network (; Fig.Â 2D).</text></passage><passage><infon key="file">41598_2020_73278_Fig3_HTML.jpg</infon><infon key="id">Fig3</infon><infon key="section_type">FIG</infon><infon key="type">fig_caption</infon><offset>13667</offset><text>Further optimization with GA. (A). Model features and variants available for solution search space in second phase of GA optimization. Each column represents a model feature to be optimized and each row is a possible feature variant for the GA to select from. (B) Top-5 performing networks from CT and MRI trained networks as optimized by the GA for 10 generations of 100 solution populations. (C) Top-5 performing networks for combined CT-MRI trained networks as optimized by the GA for 10 generations of 100 solution populations.</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">paragraph</infon><offset>14199</offset><text>While performance improved within both modalities compared to the pre-GA results, this method searched only 0.005% of the total number of solutions. We sought to verify that we did not identify a local minima within the model solution space by exploring 0.1% of all solutions. In every GA iteration all paramaters were equally distributed in the first generation, but by the last generation the same end-point was reached with similar results via similar âevolutionaryâ paths to those presented in Fig.Â 2 (data not shown). To further improve model generalization, we performed a second iteration of the GA with fewer parameters (Fig.Â 3A). In this iteration, we allowed the GA to evolve a parameter population with only 144 possible combinations for CT and 1944 possible solutions for MRI. After running the GA on the new refined feature lists for 10 generations with 100 solutions per generation, the top accuracy for CT increased by a further 1.54% (T5NAÂ =Â 83.4%; MPÂ =Â 85.3%; Fig.Â 3B). Similarly, we observed an increase in performance for CT-MRI networks (T5NA = 86.1%; MP = 87.8%; Fig.Â 3C). Interestingly, however, the solution networks for MRI classification did not attain the same level of accuracy as the initial GA iteration (T5NA = 78.5%; MP = 80.8%; Fig.Â 3B). This could be due to our optimization algorithm erroneously identifying a local minimum of the solution space, as opposed to the desired global minimum.</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">title_2</infon><offset>15635</offset><text>Stochastically augmented training data outperforms TANDA augmented training data</text></passage><passage><infon key="file">41598_2020_73278_Fig4_HTML.jpg</infon><infon key="id">Fig4</infon><infon key="section_type">FIG</infon><infon key="type">fig_caption</infon><offset>15716</offset><text>Test performance of models trained on stochastic image augmentation and GAN-LSTM augmented images. (A) Exemplar images of original training CT (top) and MRI (bottom), with randomly augmented variants, and TANDA-augmented variants. (B) ROC curves for CT- and MRI-trained networks comparing top results of supervised augmented images and TANDA-generated images. Dashed lines represent ROC curve of random chance classification.</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">paragraph</infon><offset>16142</offset><text>It is well documented that data augmentation improves performance of state-of-the-art image classification models. Two potential data augmentation solutions are the stochastic-based and ML-based augmentation pipelines. We explored both solutions, using the publicly available python modules Augmentor (stochastic-based) and TANDA (LSTM-GAN-based) to oversample our training data to 1000 images per class (Fig.Â 4A). Interestingly, optimal models trained on stochastically augmented data outperformed those same architectures trained on TANDA augmented data (Fig.Â 4B).</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">paragraph</infon><offset>16711</offset><text>This finding could result from our use of TANDA with parameters given for the MNIST handwritten-image dataset context, rather than applying TANDA following optimization for our specific context. While this represents an area for additional investigation, current literature suggests that TANDA can be expected to realize improvements of 2â4% in CNNs with architectures comparable to our own. Given this fairly small improvement, there exists a computational efficiency argument that favors the use of the stochastic process, especially in early stage investigations, or in contexts where computational resources are limited. In our study, the stochastic approach yielded superior results without the requirement to train and evaluate complex machine-learning systems and with lesser computational demand.</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">paragraph</infon><offset>17518</offset><text>An additional aspect of our data that could favor the use of stochastic data augmentation is the relative conspicuity of the critical features of the image. Both due to the nature of a tumor being a mass lesion, and the quality of current medical imaging technologies, the primary source of differentiable information in the images that compose our dataset lies within the sellar/suprasellar region (discussed in the following section), with a gradient of decreasing value as one moves radially away from this region. The resultant relative simplicity in the images may therefore lead to only a marginal difference between stochastic augmentation and TANDA. Datasets in which the target object is more difficult to distinguish from the background (for example, identifying a person wearing black and white stripes among a group of zebras) may, however, better demonstrate the advantage of the more complex TANDA methodology.</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">title_2</infon><offset>18443</offset><text>Manual objective obfuscation indicates the sellar/suprasellar region is critical to class identification</text></passage><passage><infon key="file">41598_2020_73278_Fig5_HTML.jpg</infon><infon key="id">Fig5</infon><infon key="section_type">FIG</infon><infon key="type">fig_caption</infon><offset>18548</offset><text>Pituitary obfuscation reveals latent features exist outside canonical ROI for CT scans. (A) Example original and obfuscated images for both data classes and both imaging modalities. (B) ROC curves for networks trained on obfuscated and original data; original data was âAugmented ()â variant. (C) Baseline ROC curves for all twelve networks trained on original (left) and obfuscated (right) CT images. (D) Baseline ROC curves for all twelve networks trained on original (left) and obfuscated (right) MRI images.</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">paragraph</infon><offset>19064</offset><text>To understand the general patterns the model identified as class indicators, we performed manual objective obfuscation of the sellar/suprasellar region in all training images (Fig.Â 5A). The previously identified optimal networks were trained on these obfuscated data and subsequently used to infer diagnosis from the test set. In this context, the networks failed to accurately distinguish ACP from NOTACP images (Fig.Â 5B). Interestingly, however, when the baseline networks were trained using obfuscated data, some networks reliably distinguished data classes (Fig.Â 5C,D). This suggests that while the GA-identified networks utilize image patterns within the sellar/suprasellar region, other non-optimized networks identify latent patterns outside of the sellar/suprasellar region, which is the anatomical location of ACP. As such, a potential improvement to our model could be to integrate feature embeddings from all networks in order to leverage both sellar/suprasellar and extra-sellar patterns within the data.</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">title_2</infon><offset>20084</offset><text>Benchmarking against human performance and assessment of hold out training/testing approach</text></passage><passage><infon key="file">41598_2020_73278_Fig6_HTML.jpg</infon><infon key="id">Fig6</infon><infon key="section_type">FIG</infon><infon key="type">fig_caption</infon><offset>20176</offset><text>Optimized network classification performance versus human specialist and 5-fold cross-validation evaluation. (A) Radiologist average auROC of 89.4%, 83.3%, and 93.8% for CT, MRI, and CT-MRI, respectively. GA-optimzed auROC of 85.3%, 83.3%, and 87.8% for CT, MRI, and CT-MRI, respectively. (B) Schematics of 5-fold cross-validation (5F-CV) approaches used to verify the perceived improvement yielded by augmented training data (scenario 3 vs. scenarios 1 and 2). Additionally scenarios 1 and 2 investigate the effect of mixing augmented data into the overall data pool versus only augmenting training data. (C) Performance metrics (AUC: area under the ROC curve; Accuracy: standard accuracy metric) for 5F-CV across all three scenarios. Peak performance was achieved via scenario 2 in CT (AUCÂ =Â 88.0%, AccuracyÂ =Â 89.0%) and MRI (AUCÂ =Â 97.5%, AccuracyÂ =Â 97.4%). In the context of CT-MRI, peak performance was attained in scenario 3 (AUCÂ =Â 97.8%, AccuracyÂ =Â 97.9%).</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">paragraph</infon><offset>21151</offset><text>Next, we sought to compare the generalization capacity of our GA-optimized models against the performance of board-certified pediatric neuroradiologists. Using the same test dataset (1 JPEG image per modality per unique patient) used to determine âfitnessâ within the GA, two specialists were asked to classify diagnosis of ACP/NOTACP in a binary context (Fig.Â 6). Our optimal models performed on par with the average of human specialists (), although âRadiologist Aâ consistently outperformed our models across the board. As mentioned previously, recent work reported an accuracy of ACP diagnosis of 87% by pediatric neuroradiologists using a complete imaging dataset and clinical history. This performance corroborates the overall generalization capacity of the models presented herein.</text></passage><passage><infon key="section_type">RESULTS</infon><infon key="type">paragraph</infon><offset>21949</offset><text>Since the dataset utilized is small and therefore sensitive to selection bias, there is concern that the hold-out approach may misrepresent the true predictive capacity of our classifier. To address this, we additionally evaluated our classifier using five-fold cross-validation (5F-CV). Our GA previously identified that augmented data were ideal for training and original data were ideal for test data, thus we chose to evaluate 5F-CV in three different scenarios to verify that augmenting training data are superior (Fig.Â 6). To further verify the power of our classifier, we chose two separate approaches as to when data is augmented. Interestingly, the 5F-CV data suggests model performance greater than results yielded in the hold-out approach (Fig.Â 6C). We see that for CT and MRI contexts, augmenting only training data yields the highest results (88.9% and 97.3%, respectively; Fig.Â 6B. Scenario 2) and classifiers trained on original data perform worse, as expected. This is particularly interesting due to the expectation that mixing augmented data (Fig.Â 6B. Scenario 1) should increase data overlap and therefore lead to overfitting and inflated performance metrics. Lastly, the CT-MRI context demonstrated that peak performance was attained using original training and test data. Since the CT-MRI context concatenates feature embeddings along a 1-dimensional axis, perhaps these features contain sufficient classification information without the need for augmentation. In fact, information needed in the CT-MRI context may be obscured or dropped by concatenating two augmented case examples. In summary, the combination of hold-out and 5F-CV performance metrics firmly verifies the robustness of our GA-based approach and our resultant classifiers.</text></passage><passage><infon key="section_type">DISCUSS</infon><infon key="type">title_1</infon><offset>23715</offset><text>Discussion</text></passage><passage><infon key="section_type">DISCUSS</infon><infon key="type">paragraph</infon><offset>23726</offset><text>Using the pediatric brain tumor Adamantinomatous Craniopharyngioma as an example of a clinical entity with a small available dataset, we enhance the performance of a baseline Convolutional Neural Network using a series of optimization methodologies, including Transfer Learning, Data Augmentation (supervised and unsupervised), and Image Obfuscation. The application of a Genetic Algorithm as a meta-heuristic optimizer realized performance improvements of approximately 23% for CT-trained networks, and 38% for MRI-trained networks, leading to test accuracies of 85.3%, 83.3%, and 87.8% for Computed Tomography (CT), Magnetic Resonance Imaging (MRI), and combined CT and MRI datasets, respectively. We further demonstrate that this is equivalent to the diagnostic accuracy of clinical experts (). Lastly, we verified the results of the hold-out test set approach we utilized by demonstrating increased performance under the auspices of 5-fold cross-validation.</text></passage><passage><infon key="section_type">DISCUSS</infon><infon key="type">paragraph</infon><offset>24688</offset><text>Notably, in line with human performance, combining CT and MRI together resulted in higher performance across the board. This is likely due to the increase in relevant information put forth by consideration of both imaging modalities. Furthermore, it is also interesting that we see the baseline performance of CT being very close to the optimized performance in contrast to the larger performance improvement seen in the context of MRI. This is likely due to the intrinsic differences between each classification problem. Meaning, that the pre-trained network feature (as opposed to learning rate, batch size, regularization, etc.) in the CT scenario had the relative greatest impact on overall model performance. Through this kind of perspective it is possible to utilize the GA to extract feature importance information from the GA search space. Additionally, the asynchronous parallelization of our optimization algorithm increased efficiency both in terms of the number of solutions to consider as well as the computational time and resources required to complete calculations. This offers evidence that these techniques may be broadly applied to the development of other parameterized machine learning models in the context of limited training data.</text></passage><passage><infon key="section_type">DISCUSS</infon><infon key="type">paragraph</infon><offset>25943</offset><text>As this work represents an initial exploration of these methodologies, the presented model may be improved. For example, it is possible that the TANDA algorithm could itself be optimized by a GA or other meta-heuristic algorithm, such as particle swarm optimization. Another possible improvement could be to aggregate feature embeddings from all networks as input data for each real image, thus synthetically expanding the dataset in a manner that leverages pre-trained feature extraction. Lastly, we explored only one type of classifier. Other classifiers, such as a Random Forest-based method or a deeper classifier, while possibly more prone to overfitting, may also improve performance.</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">title_1</infon><offset>26634</offset><text>Methods</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">title_2</infon><offset>26642</offset><text>Image acquisition</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>26660</offset><text>Deidentified preoperative DICOM image sets for 39 unique patients with histologically confirmed ACP were obtained through the Advancing Treatment for Pediatric Craniopharyngioma consortium () and the St. Jude Childrenâs Research Hospital (). Per the Colorado Multiple Institutional Review Board and United States Health and Human Services Regulation 45 CFR 46, this study was exempt from requiring Institutional Review Board approval. Where otherwise concerned, appropriate informed consent was obtained in accordance with the Declaration of Helsinki (v. 2013). Sagittal T1-weighted MRI and axial non-contrast CT image series were selected, based on the fact that the 2 modalities are used in a complementary manner in the clinical setting. A board-certified pediatric neurosurgeon selected individual images from each series, based on their demonstration of the disease process. These were exported as  pixel JPEG images. This procedure was also performed on analogous imaging studies from 47 unique patients with histologically confirmed non-ACP sellar/suprasellar lesions (NOTACP), which were in the radiological differential diagnosis of ACP. These included pilocytic astrocytoma (), germinoma (), pilomixoid astrocytoma (), optic glioma (), pituitary adenoma (), arachnoid cyst (), prolactinoma (), mature teratoma (), low grade glioma (), renal cell carcinoma (), Rathkeâs cyst (), lipoma (), and Langerhans cell histiocytosis (). NOTACP image datasets were obtained from the radiology department at Childrenâs Hospital Colorado () and St. Jude Childrenâs Research Hospital (). For training, we utilized 23 ACP and 30 NOTACP patient datasets. We extracted three representative images per patient and imaging modality (6 images per patient, 318 images total). The test dataset was comprised of 16 ACP and 17 NOTACP patients, with one representative image selected per patient and imaging modality (66 images total; 33 MRI and 33 CT).</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">title_2</infon><offset>28607</offset><text>Transfer learning and model architecture</text></passage><passage><infon key="file">Tab1.xml</infon><infon key="id">Tab1</infon><infon key="section_type">TABLE</infon><infon key="type">table_caption</infon><offset>28648</offset><text>Pre-trained networks utilized.</text></passage><passage><infon key="file">Tab1.xml</infon><infon key="id">Tab1</infon><infon key="section_type">TABLE</infon><infon key="type">table</infon><infon key="xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;table xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; frame=&quot;hsides&quot; rules=&quot;groups&quot;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align=&quot;left&quot;&gt;Network&lt;/th&gt;&lt;th align=&quot;left&quot;&gt;Source&lt;/th&gt;&lt;th align=&quot;left&quot;&gt;Feature vector size&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Inception V1&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;&lt;ext-link ext-link-type=&quot;uri&quot; xlink:href=&quot;https://tfhub.dev/google/imagenet/inception_v1/feature_vector/1&quot;&gt;https://tfhub.dev/google/imagenet/inception_v1/feature_vector/1&lt;/ext-link&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;1024&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Inception V2&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;&lt;ext-link ext-link-type=&quot;uri&quot; xlink:href=&quot;https://tfhub.dev/google/imagenet/inception_v2/feature_vector/1&quot;&gt;https://tfhub.dev/google/imagenet/inception_v2/feature_vector/1&lt;/ext-link&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;1024&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Inception V3&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;&lt;ext-link ext-link-type=&quot;uri&quot; xlink:href=&quot;https://tfhub.dev/google/imagenet/inception_v3/feature_vector/1&quot;&gt;https://tfhub.dev/google/imagenet/inception_v3/feature_vector/1&lt;/ext-link&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;2048&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Inception ResNet V2&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;&lt;ext-link ext-link-type=&quot;uri&quot; xlink:href=&quot;https://tfhub.dev/google/imagenet/inception_resnet_v2/classification/1&quot;&gt;https://tfhub.dev/google/imagenet/inception_resnet_v2/classification/1&lt;/ext-link&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;1536&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;ResNet V1 50&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;&lt;ext-link ext-link-type=&quot;uri&quot; xlink:href=&quot;https://tfhub.dev/google/imagenet/resnet_v1_50/feature_vector/1&quot;&gt;https://tfhub.dev/google/imagenet/resnet_v1_50/feature_vector/1&lt;/ext-link&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;2048&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;ResNet V1 101&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;&lt;ext-link ext-link-type=&quot;uri&quot; xlink:href=&quot;https://tfhub.dev/google/imagenet/resnet_v1_101/feature_vector/1&quot;&gt;https://tfhub.dev/google/imagenet/resnet_v1_101/feature_vector/1&lt;/ext-link&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;2048&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;ResNet V1 152&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;&lt;ext-link ext-link-type=&quot;uri&quot; xlink:href=&quot;https://tfhub.dev/google/imagenet/resnet_v1_152/feature_vector/1&quot;&gt;https://tfhub.dev/google/imagenet/resnet_v1_152/feature_vector/1&lt;/ext-link&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;2048&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;ResNet V2 50&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;&lt;ext-link ext-link-type=&quot;uri&quot; xlink:href=&quot;https://tfhub.dev/google/imagenet/resnet_v2_50/feature_vector/1&quot;&gt;https://tfhub.dev/google/imagenet/resnet_v2_50/feature_vector/1&lt;/ext-link&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;2048&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;ResNet V2 101&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;&lt;ext-link ext-link-type=&quot;uri&quot; xlink:href=&quot;https://tfhub.dev/google/imagenet/resnet_v2_101/feature_vector/1&quot;&gt;https://tfhub.dev/google/imagenet/resnet_v2_101/feature_vector/1&lt;/ext-link&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;2048&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;ResNet V2 152&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;&lt;ext-link ext-link-type=&quot;uri&quot; xlink:href=&quot;https://tfhub.dev/google/imagenet/resnet_v2_152/feature_vector/1&quot;&gt;https://tfhub.dev/google/imagenet/resnet_v2_152/feature_vector/1&lt;/ext-link&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;2048&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;NASNet-A Large&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;&lt;ext-link ext-link-type=&quot;uri&quot; xlink:href=&quot;https://tfhub.dev/google/imagenet/nasnet_large/feature_vector/1&quot;&gt;https://tfhub.dev/google/imagenet/nasnet_large/feature_vector/1&lt;/ext-link&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;4032&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;PNASNet-5 Large&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;&lt;ext-link ext-link-type=&quot;uri&quot; xlink:href=&quot;https://tfhub.dev/google/imagenet/pnasnet_large/feature_vector/2&quot;&gt;https://tfhub.dev/google/imagenet/pnasnet_large/feature_vector/2&lt;/ext-link&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;4320&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
</infon><offset>28679</offset><text>Network	Source	Feature vector size	 	Inception V1	https://tfhub.dev/google/imagenet/inception_v1/feature_vector/1	1024	 	Inception V2	https://tfhub.dev/google/imagenet/inception_v2/feature_vector/1	1024	 	Inception V3	https://tfhub.dev/google/imagenet/inception_v3/feature_vector/1	2048	 	Inception ResNet V2	https://tfhub.dev/google/imagenet/inception_resnet_v2/classification/1	1536	 	ResNet V1 50	https://tfhub.dev/google/imagenet/resnet_v1_50/feature_vector/1	2048	 	ResNet V1 101	https://tfhub.dev/google/imagenet/resnet_v1_101/feature_vector/1	2048	 	ResNet V1 152	https://tfhub.dev/google/imagenet/resnet_v1_152/feature_vector/1	2048	 	ResNet V2 50	https://tfhub.dev/google/imagenet/resnet_v2_50/feature_vector/1	2048	 	ResNet V2 101	https://tfhub.dev/google/imagenet/resnet_v2_101/feature_vector/1	2048	 	ResNet V2 152	https://tfhub.dev/google/imagenet/resnet_v2_152/feature_vector/1	2048	 	NASNet-A Large	https://tfhub.dev/google/imagenet/nasnet_large/feature_vector/1	4032	 	PNASNet-5 Large	https://tfhub.dev/google/imagenet/pnasnet_large/feature_vector/2	4320	 	</text></passage><passage><infon key="file">Tab1.xml</infon><infon key="id">Tab1</infon><infon key="section_type">TABLE</infon><infon key="type">table_foot</infon><offset>29753</offset><text>Modules were accessed using the respective URL and standard TensorFlow Hub methods.</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>29837</offset><text>Transfer learning was completed by extracting dense one-dimensional feature vectors (image signatures) using models fully trained on the ILSVRC-2012-CLS dataset. These models are publicly available on TensorFlow Hub (TableÂ 1).</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>30065</offset><text>Resultant image signatures were given as inputs to a single fully-connected layer of the standard formwhere  is the activation function. Prior to activation, input image signatures were transformed via a dropout layer with feature keep probabilities being one of 25%, 50%, 75%, or 100% (i.e. no dropout). We explored the application of several activation functions (softmax, softplus, softsign, ReLU, leaky ReLU, and log softmax) readily available within the TensorFlow library. Model loss was calculated using the canonical categorical cross-entropy function.where applied, model regularization was implemented using  or  (Tikhonov) regularization using native TensorFlow commands against either model weights, biases, or both.</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>30794</offset><text>Each model architecture was then exposed to one of the following optimizers: Gradient Descent, Adam, Adagrad, Adadelta, RMSProp, Momentum, FTRL, Proximal Adagrad, and Proximal Adadelta. Training batch sizes were one of 2, 5, 10, 20, or 120 images. Training duration ranged from 10 to 125 epochs. Lastly, the learning rate utilized for training was one of 0.00001, 0.0001, 0.001, 0.005, 0.01, 0.05, and 0.1.</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>31201</offset><text>We acknowledge the F1 score as being a widely utilized accuracy metric for models that are trained on imbalanced datasets, especially in the computer science field. While our original training dataset is indeed slightly imbalanced towards the NOTACP class, we use a balanced test dataset ubiquitously. In addition, our augmented training datasets are numerically balanced. We chose to evaluate network performance using the clinically commonplace metrics of Receiver Operating Characteristic (ROC) curve and area under the ROC curve (AUC) as they more readily translate meaning to clinical practioners.</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">title_2</infon><offset>31804</offset><text>Genetic algorithm</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>31822</offset><text>The genetic algorithm (Algorithm 1) was adapted from a set of publicly available repositories, and it is specifically utilized herein as a meta-parameter optimization solution. Briefly, we randomly select one model feature (e.g., loss function, learning rate, batch size, etc.) for each of the features listed in Fig.Â 2b, this set of features comprises a singular âindividualâ. For a given generation, we generated 100 of these âindividualsâ. Each individual is asynchronously processed and the âfitnessâ of an individual is the AUC value described above. After the full generation has been evaluated, a top fraction is carried over to the next generation. The following generation is created by randomly selecting model features found in the individuals that comprise the top fraction of the the previous generationâakin to âoffspringâ from a âmotherâ and âfatherâ set. It is worth noting that genetic algorithms are prone to identifying local minima which can lead to biased optimization results, though we have attempted to mitigate this by using random mutation. A visual schematic for this process can be seen in Fig.Â 2a.</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>32977</offset><text>The search space of the genetic algorithm included 19,051,200 possible solutions (12 pre-trained networks  learning rates  batch sizes  training epochs  optimizers  activation functions  dropout rates  regularization methods  training datasets  test datasets). Note, that although there are only 9 optimizers explicitly listed in Fig.Â 2B that the proximal optimizers have 4 unique variants (no regularization, l1-regularization, l2-regularization, and l1/l2-regularization; as demarcated by the asterisk in the figure), yielding 15 possible optimizers. The AUC âfitnessâ value is determined for each network by evaluating on the test mentioned above (). On our system we were capable of running 10 networks simultaneously at any given time, and runtime for 10 generations with  (i.e., 1000 networks) was approximately 1â1.5Â days.</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">title_2</infon><offset>33815</offset><text>Image augmentation and synthetic data expansion by TANDA</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>33872</offset><text>Standard image augmentation was performed using the Augmentor python library. Training data was augmented using a pipeline implementing a random distortion (, , , ), followed by a random  rotation (), then a random zoom (, ), and finally a random left-right flip (). CT and MRI data were each sampled using this pipeline for either 100 or 1000 iterations. Test images were sampled using this pipeline, with all probabilities being set to 1.0. Test images were sampled using this pipeline either 10 or 100 times.</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>34384</offset><text>Unsupervised GAN-based image generation was performed via minor adaptation to the TANDA python library8 initialized with the following parameters: LSTM-class generator; generator learning rate of ; discriminator learning rate of ; gamma equal to 0.5; one mean-squared-error (MSE) layer; MSE-term coefficient of ; transformation sequence length of 10; no per-image standardization; trained using a batch size of 5 and for a duration of 5 epochs. We sought to extract the generated images as JPEG files for visualization, as opposed to direct import into an end-classifier. 1000 ACP and 1000 NOTACP synthetic images were generated for both CT and MRI modalities.</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">title_2</infon><offset>35045</offset><text>Computational hardware and software</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">paragraph</infon><offset>35081</offset><text>All computational programs were performed on a 64-bit RedHat Enterprise Linux HPC running CentOS 7.4.1708. Python based programs were executed in a virtual environment containing Python 3.6 with the following modules: Augmentor (v 0.2.2), Matplotlib (v 2.2.2), Numpy (v 1.14.15), Pandas (v 0.23.3), Ray (v 0.6.4), Sci-kit Image (v 0.14.0), TensorFlow (v 1.12.0), and TensorFlow Hub (v 0.2.0).</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">footnote</infon><offset>35474</offset><text>Publisher's note</text></passage><passage><infon key="section_type">METHODS</infon><infon key="type">footnote</infon><offset>35491</offset><text>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</text></passage><passage><infon key="section_type">AUTH_CONT</infon><infon key="type">title</infon><offset>35610</offset><text>Author contributions</text></passage><passage><infon key="section_type">AUTH_CONT</infon><infon key="type">paragraph</infon><offset>35631</offset><text>Project Conception: EP, TCH; Project Design: EP, TCH; Software Generation: EP; Data Acquisition: RW, NS, DM, SS, PK, RCEA, TNN, GG, MS, JMJ, EMJ, DDL, AS, AMD, JC, LK, KG, RN, RD, ETK, GJ, MHH; Data Analysis: EP, KJ; Data Interpretation: EP, KJ, AMD, NF, TCH; Manuscript Composition: EP, RW, TCH; Manuscript Revisions: KJ, AMD, NF, TCH;</text></passage><passage><infon key="section_type">SUPPL</infon><infon key="type">title</infon><offset>35968</offset><text>Data availability</text></passage><passage><infon key="section_type">SUPPL</infon><infon key="type">paragraph</infon><offset>35986</offset><text>The dataset analyzed during the current study is available from the corresponding author on reasonable request.</text></passage><passage><infon key="section_type">COMP_INT</infon><infon key="type">title</infon><offset>36098</offset><text>Competing interests</text></passage><passage><infon key="section_type">COMP_INT</infon><infon key="type">paragraph</infon><offset>36118</offset><text>The authors declare no competing interests.</text></passage><passage><infon key="section_type">REF</infon><infon key="type">title</infon><offset>36162</offset><text>References</text></passage><passage><infon key="fpage">436</infon><infon key="lpage">444</infon><infon key="name_0">surname:LeCun;given-names:Y</infon><infon key="name_1">surname:Bengio;given-names:Y</infon><infon key="name_2">surname:Hinton;given-names:G</infon><infon key="pub-id_doi">10.1038/nature14539</infon><infon key="pub-id_pmid">26017442</infon><infon key="section_type">REF</infon><infon key="source">Nature</infon><infon key="type">ref</infon><infon key="volume">521</infon><infon key="year">2015</infon><offset>36173</offset><text>Deep learning</text></passage><passage><infon key="name_0">surname:Goodfellow;given-names:I</infon><infon key="name_1">surname:Bengio;given-names:Y</infon><infon key="name_2">surname:Courville;given-names:A</infon><infon key="section_type">REF</infon><infon key="source">Deep Learning</infon><infon key="type">ref</infon><infon key="year">2016</infon><offset>36187</offset></passage><passage><infon key="fpage">2402</infon><infon key="lpage">2410</infon><infon key="name_0">surname:Gulshan;given-names:V</infon><infon key="pub-id_doi">10.1001/jama.2016.17216</infon><infon key="pub-id_pmid">27898976</infon><infon key="section_type">REF</infon><infon key="source">JAMA</infon><infon key="type">ref</infon><infon key="volume">316</infon><infon key="year">2016</infon><offset>36188</offset><text>Development and validation of a deep learning algorithm for detection of diabetic retinopathy in retinal fundus photographs</text></passage><passage><infon key="section_type">REF</infon><infon key="type">ref</infon><offset>36312</offset><text>Russakovsky, O. et al. Imagenet large scale visual recognition challenge. CoRRarXiv:abs/1409.0575 (2014).</text></passage><passage><infon key="fpage">1929</infon><infon key="lpage">1958</infon><infon key="name_0">surname:Srivastava;given-names:N</infon><infon key="name_1">surname:Hinton;given-names:G</infon><infon key="name_2">surname:Krizhevsky;given-names:A</infon><infon key="name_3">surname:Sutskever;given-names:I</infon><infon key="name_4">surname:Salakhutdinov;given-names:R</infon><infon key="section_type">REF</infon><infon key="source">J. Mach. Learn. Res.</infon><infon key="type">ref</infon><infon key="volume">15</infon><infon key="year">2014</infon><offset>36418</offset><text>Dropout: a simple way to prevent neural networks from overfitting</text></passage><passage><infon key="fpage">14</infon><infon key="lpage">23</infon><infon key="name_0">surname:Lu;given-names:J</infon><infon key="pub-id_doi">10.1016/j.knosys.2015.01.010</infon><infon key="section_type">REF</infon><infon key="source">Knowl. Based Syst.</infon><infon key="type">ref</infon><infon key="volume">80</infon><infon key="year">2015</infon><offset>36484</offset><text>Transfer learning using computational intelligence: a survey</text></passage><passage><infon key="section_type">REF</infon><infon key="type">ref</infon><offset>36545</offset><text>Bengio, Y., Courville, A. C. &amp; Vincent, P. Unsupervised feature learning and deep learning: a review and new perspectives. CoRRarXiv:abs/1206.5538 (2012).</text></passage><passage><infon key="section_type">REF</infon><infon key="type">ref</infon><offset>36700</offset><text>Ratner, A. J., Ehrenberg, H. R., Hussain, Z., Dunnmon, J. &amp; RÃ©, C. Learning to compose domain-specific transformations for data augmentation. arXiv:1709.01643 (2017).</text></passage><passage><infon key="fpage">99</infon><infon key="name_0">surname:Gupta;given-names:P</infon><infon key="name_1">surname:Jalali;given-names:R</infon><infon key="pub-id_doi">10.1007/s11910-017-0808-0</infon><infon key="pub-id_pmid">29119343</infon><infon key="section_type">REF</infon><infon key="source">Curr. Neurol. Neurosci. Rep.</infon><infon key="type">ref</infon><infon key="volume">17</infon><infon key="year">2017</infon><offset>36868</offset><text>Long-term survivors of childhood brain tumors: impact on general health and quality of life</text></passage><passage><infon key="fpage">e27680</infon><infon key="name_0">surname:Norris;given-names:GA</infon><infon key="pub-id_doi">10.1002/pbc.27680</infon><infon key="pub-id_pmid">30848081</infon><infon key="section_type">REF</infon><infon key="source">Pediatr. Blood Cancer</infon><infon key="type">ref</infon><infon key="volume">66</infon><infon key="year">2019</infon><offset>36960</offset><text>Diagnostic accuracy of neuroimaging in pediatric optic chiasm/sellar/suprasellar tumors</text></passage><passage><infon key="section_type">REF</infon><infon key="type">ref</infon><offset>37048</offset><text>Abadi, M. et al. Tensorflow: large-scale machine learning on heterogeneous distributed systems. CoRRarXiv:abs/1603.04467 (2016).</text></passage><passage><infon key="section_type">REF</infon><infon key="type">ref</infon><offset>37177</offset><text>He, K., Zhang, X., Ren, S. &amp; Sun, J. Deep residual learning for image recognition. CoRR arXiv:abs/1512.03385 (2015).</text></passage><passage><infon key="section_type">REF</infon><infon key="type">ref</infon><offset>37294</offset><text>Ioffe, S. &amp; Szegedy, C. Batch normalization: Accelerating deep network training by reducing internal covariate shift. CoRR arXiv:abs/1502.03167 (2015).</text></passage><passage><infon key="section_type">REF</infon><infon key="type">ref</infon><offset>37446</offset><text>Liu, C. et al. Progressive neural architecture search. CoRR arXiv:abs/1712.00559 (2017).</text></passage><passage><infon key="section_type">REF</infon><infon key="type">ref</infon><offset>37535</offset><text>Szegedy, C., Ioffe, S. &amp; Vanhoucke, V. Inception-v4, inception-resnet and the impact of residual connections on learning. CoRR arXiv:abs/1602.07261 (2016).</text></passage><passage><infon key="section_type">REF</infon><infon key="type">ref</infon><offset>37691</offset><text>He, K., Zhang, X., Ren, S. &amp; Sun, J. Identity mappings in deep residual networks. CoRR arXiv:abs/1603.05027 (2016).</text></passage><passage><infon key="section_type">REF</infon><infon key="type">ref</infon><offset>37807</offset><text>Szegedy, C., Vanhoucke, V., Ioffe, S., Shlens, J. &amp; Wojna, Z. Rethinking the inception architecture for computer vision. CoRR arXiv:abs/1512.00567 (2015).</text></passage><passage><infon key="section_type">REF</infon><infon key="type">ref</infon><offset>37962</offset><text>Perez, L. &amp; Wang, J. The effectiveness of data augmentation in image classification using deep learning. CoRR arXiv:abs/1712.04621 (2017).</text></passage><passage><infon key="section_type">REF</infon><infon key="type">ref</infon><offset>38101</offset><text>Ciresan, D. C., Meier, U., Gambardella, L. M. &amp; Schmidhuber, J. Deep big simple neural nets excel on handwritten digit recognition. CoRR arXiv:abs/1003.0358 (2010).</text></passage><passage><infon key="name_0">surname:Murphy;given-names:KP</infon><infon key="section_type">REF</infon><infon key="source">Machine Learning: A Probabilistic Perspective</infon><infon key="type">ref</infon><infon key="year">2013</infon><offset>38266</offset></passage><passage><infon key="section_type">REF</infon><infon key="type">ref</infon><offset>38267</offset><text>Ng, A. Y. Feature selection, l1 vs. l2 regularization, and rotational invariance. In Proceedings of the Twenty-First International Conference on Machine Learning, ICML â04, 78, 10.1145/1015330.1015435 (Association for Computing Machinery, New York, NY, USA, 2004).</text></passage><passage><infon key="section_type">REF</infon><infon key="type">ref</infon><offset>38534</offset><text>Regularization for sparsity: L1 regularization. https://developers.google.com/machine-learning/crash-course/regularization-for-sparsity/l1-regularization. Accessed 15 June 2020</text></passage><passage><infon key="section_type">REF</infon><infon key="type">ref</infon><offset>38711</offset><text>Kingma, D. P. &amp; Ba, J. Adam: a method for stochastic optimization (2014). Cite arxiv:1412.6980Comment: Published as a conference paper at the 3rd International Conference for Learning Representations, San Diego, 2015.</text></passage><passage><infon key="fpage">536</infon><infon key="lpage">538</infon><infon key="name_0">surname:Cauchy;given-names:MA</infon><infon key="section_type">REF</infon><infon key="source">C. R. des seances de l'academie des Sci.</infon><infon key="type">ref</infon><infon key="volume">81</infon><infon key="year">1847</infon><offset>38929</offset><text>Methode generale pour la resolution des systemes dâequations simultanees</text></passage><passage><infon key="fpage">2121</infon><infon key="lpage">2159</infon><infon key="name_0">surname:Duchi;given-names:J</infon><infon key="name_1">surname:Hazan;given-names:E</infon><infon key="name_2">surname:Singer;given-names:Y</infon><infon key="section_type">REF</infon><infon key="source">J. Mach. Learn. Res.</infon><infon key="type">ref</infon><infon key="volume">12</infon><infon key="year">2011</infon><offset>39004</offset><text>Adaptive subgradient methods for online learning and stochastic optimization</text></passage><passage><infon key="section_type">REF</infon><infon key="type">ref</infon><offset>39081</offset><text>Duchi, J. &amp; Singer, Y. Proximal and first-order methods for convex optimization. https://ppasupat.github.io/a9online/uploads/proximal_notes. Accessed 15 June 2020</text></passage><passage><infon key="section_type">REF</infon><infon key="type">ref</infon><offset>39244</offset><text>Zeiler, M. D. ADADELTA: an adaptive learning rate method. CoRR arXiv:abs/1212.5701 (2012).</text></passage><passage><infon key="section_type">REF</infon><infon key="type">ref</infon><offset>39335</offset><text>McMahan, H. B. et al. Ad click prediction: a view from the trenches. In Proceedings of the 19th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, KDD â13, 1222â1230, 10.1145/2487575.2488200 (Association for Computing Machinery, New York, NY, USA, 2013).</text></passage><passage><infon key="section_type">REF</infon><infon key="type">ref</infon><offset>39619</offset><text>Sutskever, I., Martens, J., Dahl, G. &amp; Hinton, G. On the importance of initialization and momentum in deep learning. In Proceedings of the 30th International Conference on International Conference on Machine Learning - Volume 28, ICMLâ13, IIIâ1139âIIIâ1147 (JMLR.org, 2013).</text></passage><passage><infon key="fpage">495</infon><infon key="lpage">503</infon><infon key="name_0">surname:Singer;given-names:Y</infon><infon key="name_1">surname:Duchi;given-names:JC</infon><infon key="name_2">surname:Bengio;given-names:Y</infon><infon key="name_3">surname:Schuurmans;given-names:D</infon><infon key="name_4">surname:Lafferty;given-names:JD</infon><infon key="name_5">surname:Williams;given-names:CKI</infon><infon key="name_6">surname:Culotta;given-names:A</infon><infon key="section_type">REF</infon><infon key="source">Advances in Neural Information Processing Systems</infon><infon key="type">ref</infon><infon key="year">2009</infon><offset>39902</offset><text>Efficient learning using forward-backward splitting</text></passage><passage><infon key="fpage">29</infon><infon key="lpage">36</infon><infon key="name_0">surname:Hanley;given-names:JA</infon><infon key="name_1">surname:McNeil;given-names:BJ</infon><infon key="pub-id_doi">10.1148/radiology.143.1.7063747</infon><infon key="pub-id_pmid">7063747</infon><infon key="section_type">REF</infon><infon key="source">Radiology</infon><infon key="type">ref</infon><infon key="volume">143</infon><infon key="year">1982</infon><offset>39954</offset><text>The meaning and use of the area under a receiver operating characteristic (roc) curve</text></passage><passage><infon key="fpage">1145</infon><infon key="lpage">1159</infon><infon key="name_0">surname:Bradley;given-names:AP</infon><infon key="pub-id_doi">10.1016/S0031-3203(96)00142-2</infon><infon key="section_type">REF</infon><infon key="source">Pattern Recognit.</infon><infon key="type">ref</infon><infon key="volume">30</infon><infon key="year">1997</infon><offset>40040</offset><text>The use of the area under the roc curve in the evaluation of machine learning algorithms</text></passage><passage><infon key="section_type">REF</infon><infon key="type">ref</infon><offset>40129</offset><text>Harvey, M. Letâs evolve a neural network with a genetic algorithm. https://blog.coast.ai/lets-evolve-a-neural-network-with-a-genetic-algorithm-code-included-8809bece164. Accessed 15 June 2020.</text></passage><passage><infon key="section_type">REF</infon><infon key="type">ref</infon><offset>40324</offset><text>Larson, W. Genetic algorithms: cool name and damn simple. https://lethain.com/genetic-algorithms-cool-name-damn-simple/. Accessed 15 June 2020.</text></passage><passage><infon key="section_type">REF</infon><infon key="type">ref</infon><offset>40468</offset><text>Bloice, M. D., Stocker, C. &amp; Holzinger, A. Augmentor: an image augmentation library for machine learning. CoRR arXiv:abs/1708.04680 (2017).</text></passage><passage><infon key="fpage">90</infon><infon key="lpage">95</infon><infon key="name_0">surname:Hunter;given-names:JD</infon><infon key="pub-id_doi">10.1109/MCSE.2007.55</infon><infon key="section_type">REF</infon><infon key="source">Comput. Sci. Eng.</infon><infon key="type">ref</infon><infon key="volume">9</infon><infon key="year">2007</infon><offset>40608</offset><text>Matplotlib: A 2d graphics environment</text></passage><passage><infon key="fpage">10</infon><infon key="lpage">20</infon><infon key="name_0">surname:Oliphant;given-names:TE</infon><infon key="pub-id_doi">10.1109/MCSE.2007.58</infon><infon key="section_type">REF</infon><infon key="source">Comput. Sci. Eng.</infon><infon key="type">ref</infon><infon key="volume">9</infon><infon key="year">2007</infon><offset>40646</offset><text>Python for scientific computing</text></passage><passage><infon key="section_type">REF</infon><infon key="type">ref</infon><offset>40678</offset><text>McKinney, W. et al. Data structures for statistical computing in python. In Proceedings of the 9th Python in Science Conference, vol. 445, 51â56 (Austin, TX, 2010).</text></passage><passage><infon key="section_type">REF</infon><infon key="type">ref</infon><offset>40845</offset><text>Moritz, P. et al. Ray: a distributed framework for emerging AI applications. CoRR arXiv:abs/1712.05889 (2017).</text></passage><passage><infon key="fpage">e453</infon><infon key="name_0">surname:van der Walt;given-names:S</infon><infon key="pub-id_doi">10.7717/peerj.453</infon><infon key="pub-id_pmid">25024921</infon><infon key="section_type">REF</infon><infon key="source">PeerJ</infon><infon key="type">ref</infon><infon key="volume">2</infon><infon key="year">2014</infon><offset>40956</offset><text>scikit-image: image processing in Python</text></passage></document></collection>
